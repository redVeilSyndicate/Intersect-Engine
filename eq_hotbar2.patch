From 306def106ce7ed8c575360409a6f1e8160a726e1 Mon Sep 17 00:00:00 2001
From: TheBunnyGamer <65855333+TheBunnyGamer@users.noreply.github.com>
Date: Sat, 26 Sep 2020 17:36:49 +0100
Subject: [PATCH] Remove spell from hotbar

---
 .../Events/Commands/EventCommands.cs          |   9 +
 Intersect (Core)/GameObjects/Events/Enums.cs  |   3 +
 Intersect (Core)/Intersect (Core).csproj      |   1 +
 .../Packets/Server/RemoveHotbarSpellPacket.cs |  18 ++
 Intersect.Client/Networking/PacketHandler.cs  |  17 ++
 .../Forms/Editors/Events/CommandPrinter.cs    |   5 +
 ...EventCommand_RemoveHotbarSpell.Designer.cs | 132 +++++++++
 .../EventCommand_RemoveHotbarSpell.cs         |  54 ++++
 .../EventCommand_RemoveHotbarSpell.resx       | 128 ++++++++
 .../Forms/Editors/Events/frmEvent.Designer.cs | 273 +++++++++---------
 .../Forms/Editors/Events/frmEvent.cs          |   8 +
 Intersect.Editor/Intersect.Editor.csproj      |   9 +
 Intersect.Editor/Localization/Strings.cs      |  16 +
 .../Entities/Events/CommandProcessing.cs      |  19 ++
 Intersect.Server/Networking/PacketSender.cs   |   6 +
 15 files changed, 564 insertions(+), 134 deletions(-)
 create mode 100644 Intersect (Core)/Network/Packets/Server/RemoveHotbarSpellPacket.cs
 create mode 100644 Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.Designer.cs
 create mode 100644 Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.cs
 create mode 100644 Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.resx

diff --git a/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs b/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs
index f70160f1..66627e80 100644
--- a/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs	
+++ b/Intersect (Core)/GameObjects/Events/Commands/EventCommands.cs	
@@ -486,6 +486,15 @@ public class CommandHotbarSpellCommand : EventCommand
 
     }
 
+    public class CommandRemoveHotbarSpellCommand : EventCommand
+    {
+
+        public override EventCommandType Type { get; } = EventCommandType.RemoveHotbarSpell;
+
+        public Guid SpellId { get; set; }
+
+    }
+
     public class ChangeSpriteCommand : EventCommand
     {
 
diff --git a/Intersect (Core)/GameObjects/Events/Enums.cs b/Intersect (Core)/GameObjects/Events/Enums.cs
index 1ef4617d..9828c3f0 100644
--- a/Intersect (Core)/GameObjects/Events/Enums.cs	
+++ b/Intersect (Core)/GameObjects/Events/Enums.cs	
@@ -227,6 +227,9 @@ public enum EventCommandType
         //Hotbar Spells
         HotbarSpell,
 
+        //Remove Hotbar Spells
+        RemoveHotbarSpell,
+
     }
 
 }
diff --git a/Intersect (Core)/Intersect (Core).csproj b/Intersect (Core)/Intersect (Core).csproj
index 9f449277..879bfba0 100644
--- a/Intersect (Core)/Intersect (Core).csproj	
+++ b/Intersect (Core)/Intersect (Core).csproj	
@@ -330,6 +330,7 @@
     <Compile Include="Network\Packets\Client\HotbarUpdatePacket.cs" />
     <Compile Include="Network\Packets\Client\LoginPacket.cs" />
     <Compile Include="Network\Packets\Client\LogoutPacket.cs" />
+    <Compile Include="Network\Packets\Server\RemoveHotbarSpellPacket.cs" />
     <Compile Include="Network\Packets\Server\HotbarSpellPacket.cs" />
     <Compile Include="Network\Packets\SlotQuantityPacket.cs" />
     <Compile Include="Network\Packets\Client\SwapBankItemsPacket.cs" />
diff --git a/Intersect (Core)/Network/Packets/Server/RemoveHotbarSpellPacket.cs b/Intersect (Core)/Network/Packets/Server/RemoveHotbarSpellPacket.cs
new file mode 100644
index 00000000..7d3805fb
--- /dev/null
+++ b/Intersect (Core)/Network/Packets/Server/RemoveHotbarSpellPacket.cs	
@@ -0,0 +1,18 @@
+﻿using System;
+
+namespace Intersect.Network.Packets.Server
+{
+
+    public class RemoveHotbarSpellPacket : CerasPacket
+    {
+
+        public RemoveHotbarSpellPacket(Guid spelltohotbar)
+        {
+            SpellToHotbar = spelltohotbar;
+        }
+
+        public Guid SpellToHotbar { get; set; }
+
+    }
+
+}
diff --git a/Intersect.Client/Networking/PacketHandler.cs b/Intersect.Client/Networking/PacketHandler.cs
index afba821f..4d9ebfaf 100644
--- a/Intersect.Client/Networking/PacketHandler.cs
+++ b/Intersect.Client/Networking/PacketHandler.cs
@@ -172,6 +172,23 @@ private static void HandlePacket(HotbarSpellPacket packet)
             }
         }
 
+        //RemoveHotbarSpellPacket
+        private static void HandlePacket(RemoveHotbarSpellPacket packet)
+        {
+            var spellfind = SpellBase.Get(packet.SpellToHotbar);
+            if (spellfind != null)
+            {
+                for (var i = 0; i < Globals.Me.Hotbar.Length; i++)
+                {
+                    if (Globals.Me.Hotbar[i].ItemOrSpellId == packet.SpellToHotbar)
+                    {
+                        Globals.Me.AddToHotbar((byte)i, -1, -1);
+                        //return; - If you only want one instance of the spell on the hotbar to be removed
+                    }
+                }
+            }
+        }
+
         //PlayerEntityPacket
         private static void HandlePacket(PlayerEntityPacket packet)
         {
diff --git a/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs b/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs
index 2c29d506..2577d861 100644
--- a/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs
+++ b/Intersect.Editor/Forms/Editors/Events/CommandPrinter.cs
@@ -630,6 +630,11 @@ private static string GetCommandText(CommandHotbarSpellCommand command, MapInsta
             return Strings.EventCommandList.hotbarspell.ToString(SpellBase.GetName(command.SpellId));
         }
 
+        private static string GetCommandText(CommandRemoveHotbarSpellCommand command, MapInstance map)
+        {
+            return Strings.EventCommandList.removehotbarspell.ToString(SpellBase.GetName(command.SpellId));
+        }
+
         private static string GetCommandText(ChangeSpriteCommand command, MapInstance map)
         {
             return Strings.EventCommandList.setsprite.ToString(command.Sprite);
diff --git a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.Designer.cs b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.Designer.cs
new file mode 100644
index 00000000..f9e92f26
--- /dev/null
+++ b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.Designer.cs	
@@ -0,0 +1,132 @@
+﻿using DarkUI.Controls;
+
+namespace Intersect.Editor.Forms.Editors.Events.Event_Commands
+{
+    partial class EventCommandRemoveHotbarSpell
+    {
+        /// <summary> 
+        /// Required designer variable.
+        /// </summary>
+        private System.ComponentModel.IContainer components = null;
+
+        /// <summary> 
+        /// Clean up any resources being used.
+        /// </summary>
+        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
+        protected override void Dispose(bool disposing)
+        {
+            if (disposing && (components != null))
+            {
+                components.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+
+        #region Component Designer generated code
+
+        /// <summary> 
+        /// Required method for Designer support - do not modify 
+        /// the contents of this method with the code editor.
+        /// </summary>
+        private void InitializeComponent()
+        {
+            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(EventCommandHotbarSpell));
+            this.grpHotbarSpell = new DarkUI.Controls.DarkGroupBox();
+            this.cmbItem = new DarkUI.Controls.DarkComboBox();
+            this.lblItem = new System.Windows.Forms.Label();
+            this.btnCancel = new DarkUI.Controls.DarkButton();
+            this.btnSave = new DarkUI.Controls.DarkButton();
+            this.grpHotbarSpell.SuspendLayout();
+            this.SuspendLayout();
+            // 
+            // grpHotbarSpell
+            // 
+            this.grpHotbarSpell.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(63)))), ((int)(((byte)(65)))));
+            this.grpHotbarSpell.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
+            this.grpHotbarSpell.Controls.Add(this.cmbItem);
+            this.grpHotbarSpell.Controls.Add(this.lblItem);
+            this.grpHotbarSpell.Controls.Add(this.btnCancel);
+            this.grpHotbarSpell.Controls.Add(this.btnSave);
+            this.grpHotbarSpell.ForeColor = System.Drawing.Color.Gainsboro;
+            this.grpHotbarSpell.Location = new System.Drawing.Point(3, 3);
+            this.grpHotbarSpell.Name = "grpHotbarSpell";
+            this.grpHotbarSpell.Size = new System.Drawing.Size(193, 93);
+            this.grpHotbarSpell.TabIndex = 17;
+            this.grpHotbarSpell.TabStop = false;
+            this.grpHotbarSpell.Text = "Remove spell from hotbar:";
+            // 
+            // cmbItem
+            // 
+            this.cmbItem.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(69)))), ((int)(((byte)(73)))), ((int)(((byte)(74)))));
+            this.cmbItem.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(90)))), ((int)(((byte)(90)))), ((int)(((byte)(90)))));
+            this.cmbItem.BorderStyle = System.Windows.Forms.ButtonBorderStyle.Solid;
+            this.cmbItem.ButtonColor = System.Drawing.Color.FromArgb(((int)(((byte)(43)))), ((int)(((byte)(43)))), ((int)(((byte)(43)))));
+            this.cmbItem.ButtonIcon = ((System.Drawing.Bitmap)(resources.GetObject("cmbItem.ButtonIcon")));
+            this.cmbItem.DrawDropdownHoverOutline = false;
+            this.cmbItem.DrawFocusRectangle = false;
+            this.cmbItem.DrawMode = System.Windows.Forms.DrawMode.OwnerDrawFixed;
+            this.cmbItem.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
+            this.cmbItem.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
+            this.cmbItem.ForeColor = System.Drawing.Color.Gainsboro;
+            this.cmbItem.FormattingEnabled = true;
+            this.cmbItem.Location = new System.Drawing.Point(65, 23);
+            this.cmbItem.Name = "cmbItem";
+            this.cmbItem.Size = new System.Drawing.Size(115, 21);
+            this.cmbItem.TabIndex = 24;
+            this.cmbItem.Text = null;
+            this.cmbItem.TextPadding = new System.Windows.Forms.Padding(2);
+            // 
+            // lblItem
+            // 
+            this.lblItem.AutoSize = true;
+            this.lblItem.Location = new System.Drawing.Point(6, 25);
+            this.lblItem.Name = "lblItem";
+            this.lblItem.Size = new System.Drawing.Size(30, 13);
+            this.lblItem.TabIndex = 23;
+            this.lblItem.Text = "Item:";
+            this.lblItem.Click += new System.EventHandler(this.lblItem_Click);
+            // 
+            // btnCancel
+            // 
+            this.btnCancel.Location = new System.Drawing.Point(105, 60);
+            this.btnCancel.Name = "btnCancel";
+            this.btnCancel.Padding = new System.Windows.Forms.Padding(5);
+            this.btnCancel.Size = new System.Drawing.Size(75, 23);
+            this.btnCancel.TabIndex = 20;
+            this.btnCancel.Text = "Cancel";
+            this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);
+            // 
+            // btnSave
+            // 
+            this.btnSave.Location = new System.Drawing.Point(9, 60);
+            this.btnSave.Name = "btnSave";
+            this.btnSave.Padding = new System.Windows.Forms.Padding(5);
+            this.btnSave.Size = new System.Drawing.Size(75, 23);
+            this.btnSave.TabIndex = 19;
+            this.btnSave.Text = "Ok";
+            this.btnSave.Click += new System.EventHandler(this.btnSave_Click);
+            // 
+            // EventCommandHotbarSpell
+            // 
+            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
+            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
+            this.AutoSize = true;
+            this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(45)))), ((int)(((byte)(45)))), ((int)(((byte)(48)))));
+            this.Controls.Add(this.grpHotbarSpell);
+            this.Name = "EventCommandRemoveHotbarSpell";
+            this.Size = new System.Drawing.Size(205, 105);
+            this.grpHotbarSpell.ResumeLayout(false);
+            this.grpHotbarSpell.PerformLayout();
+            this.ResumeLayout(false);
+
+        }
+
+        #endregion
+
+        private DarkGroupBox grpHotbarSpell;
+        private DarkButton btnCancel;
+        private DarkButton btnSave;
+        private DarkComboBox cmbItem;
+        private System.Windows.Forms.Label lblItem;
+    }
+}
diff --git a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.cs b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.cs
new file mode 100644
index 00000000..20cd5945
--- /dev/null
+++ b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.cs	
@@ -0,0 +1,54 @@
+﻿using System;
+using System.Windows.Forms;
+
+using Intersect.Editor.Localization;
+using Intersect.GameObjects;
+using Intersect.GameObjects.Events.Commands;
+
+namespace Intersect.Editor.Forms.Editors.Events.Event_Commands
+{
+
+    public partial class EventCommandRemoveHotbarSpell : UserControl
+    {
+
+        private readonly FrmEvent mEventEditor;
+
+        private CommandRemoveHotbarSpellCommand mMyCommand;
+
+        public EventCommandRemoveHotbarSpell(CommandRemoveHotbarSpellCommand refCommand, FrmEvent editor)
+        {
+            InitializeComponent();
+            mMyCommand = refCommand;
+            mEventEditor = editor;
+
+            InitLocalization();
+            cmbItem.Items.Clear();
+            cmbItem.Items.AddRange(SpellBase.Names);
+            cmbItem.SelectedIndex = SpellBase.ListIndex(mMyCommand.SpellId);
+        }
+
+        private void InitLocalization()
+        {
+            grpHotbarSpell.Text = Strings.EventRemoveHotbarSpell.title;
+            btnSave.Text = Strings.EventRemoveHotbarSpell.okay;
+            btnCancel.Text = Strings.EventRemoveHotbarSpell.cancel;
+        }
+
+        private void btnSave_Click(object sender, EventArgs e)
+        {
+            mMyCommand.SpellId = SpellBase.IdFromList(cmbItem.SelectedIndex);
+            mEventEditor.FinishCommandEdit();
+        }
+
+        private void btnCancel_Click(object sender, EventArgs e)
+        {
+            mEventEditor.CancelCommandEdit();
+        }
+
+        private void lblItem_Click(object sender, EventArgs e)
+        {
+
+        }
+    }
+
+}
diff --git a/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.resx b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.resx
new file mode 100644
index 00000000..5b1d9848
--- /dev/null
+++ b/Intersect.Editor/Forms/Editors/Events/Event Commands/EventCommand_RemoveHotbarSpell.resx	
@@ -0,0 +1,128 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
+  <data name="cmbItem.ButtonIcon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+    <value>
+        iVBORw0KGgoAAAANSUhEUgAAAAkAAAAFCAYAAACXU8ZrAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
+        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAvSURBVBhXY4iJiflPCDP8//8f
+        r0KQPFgRLoUwObgiEMamAIRRFIEwuoL///8zAAC5cW+geGnZqAAAAABJRU5ErkJggg==
+</value>
+  </data>
+</root>
\ No newline at end of file
diff --git a/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs b/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs
index 72e3e258..e8eef03b 100644
--- a/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs
+++ b/Intersect.Editor/Forms/Editors/Events/frmEvent.Designer.cs
@@ -72,9 +72,10 @@ private void InitializeComponent()
             System.Windows.Forms.TreeNode treeNode25 = new System.Windows.Forms.TreeNode("Change Class");
             System.Windows.Forms.TreeNode treeNode26 = new System.Windows.Forms.TreeNode("Equip Item");
             System.Windows.Forms.TreeNode treeNode27 = new System.Windows.Forms.TreeNode("Hotbar Spell");
-            System.Windows.Forms.TreeNode treeNode28 = new System.Windows.Forms.TreeNode("Change Name Color");
-            System.Windows.Forms.TreeNode treeNode29 = new System.Windows.Forms.TreeNode("Change Player Label");
-            System.Windows.Forms.TreeNode treeNode30 = new System.Windows.Forms.TreeNode("Player Control", new System.Windows.Forms.TreeNode[] {
+            System.Windows.Forms.TreeNode treeNode28 = new System.Windows.Forms.TreeNode("Remove Hotbar Spell");
+            System.Windows.Forms.TreeNode treeNode29 = new System.Windows.Forms.TreeNode("Change Name Color");
+            System.Windows.Forms.TreeNode treeNode30 = new System.Windows.Forms.TreeNode("Change Player Label");
+            System.Windows.Forms.TreeNode treeNode31 = new System.Windows.Forms.TreeNode("Player Control", new System.Windows.Forms.TreeNode[] {
             treeNode14,
             treeNode15,
             treeNode16,
@@ -90,18 +91,18 @@ private void InitializeComponent()
             treeNode26,
             treeNode27,
             treeNode28,
-            treeNode29});
-            System.Windows.Forms.TreeNode treeNode31 = new System.Windows.Forms.TreeNode("Warp Player");
-            System.Windows.Forms.TreeNode treeNode32 = new System.Windows.Forms.TreeNode("Set Move Route");
-            System.Windows.Forms.TreeNode treeNode33 = new System.Windows.Forms.TreeNode("Wait for Route Completion");
-            System.Windows.Forms.TreeNode treeNode34 = new System.Windows.Forms.TreeNode("Hold Player");
-            System.Windows.Forms.TreeNode treeNode35 = new System.Windows.Forms.TreeNode("Release Player");
-            System.Windows.Forms.TreeNode treeNode36 = new System.Windows.Forms.TreeNode("Spawn NPC");
-            System.Windows.Forms.TreeNode treeNode37 = new System.Windows.Forms.TreeNode("Despawn NPC");
-            System.Windows.Forms.TreeNode treeNode38 = new System.Windows.Forms.TreeNode("Hide Player");
-            System.Windows.Forms.TreeNode treeNode39 = new System.Windows.Forms.TreeNode("Show Player");
-            System.Windows.Forms.TreeNode treeNode40 = new System.Windows.Forms.TreeNode("Movement", new System.Windows.Forms.TreeNode[] {
-            treeNode31,
+            treeNode29,
+            treeNode30});
+            System.Windows.Forms.TreeNode treeNode32 = new System.Windows.Forms.TreeNode("Warp Player");
+            System.Windows.Forms.TreeNode treeNode33 = new System.Windows.Forms.TreeNode("Set Move Route");
+            System.Windows.Forms.TreeNode treeNode34 = new System.Windows.Forms.TreeNode("Wait for Route Completion");
+            System.Windows.Forms.TreeNode treeNode35 = new System.Windows.Forms.TreeNode("Hold Player");
+            System.Windows.Forms.TreeNode treeNode36 = new System.Windows.Forms.TreeNode("Release Player");
+            System.Windows.Forms.TreeNode treeNode37 = new System.Windows.Forms.TreeNode("Spawn NPC");
+            System.Windows.Forms.TreeNode treeNode38 = new System.Windows.Forms.TreeNode("Despawn NPC");
+            System.Windows.Forms.TreeNode treeNode39 = new System.Windows.Forms.TreeNode("Hide Player");
+            System.Windows.Forms.TreeNode treeNode40 = new System.Windows.Forms.TreeNode("Show Player");
+            System.Windows.Forms.TreeNode treeNode41 = new System.Windows.Forms.TreeNode("Movement", new System.Windows.Forms.TreeNode[] {
             treeNode32,
             treeNode33,
             treeNode34,
@@ -109,39 +110,40 @@ private void InitializeComponent()
             treeNode36,
             treeNode37,
             treeNode38,
-            treeNode39});
-            System.Windows.Forms.TreeNode treeNode41 = new System.Windows.Forms.TreeNode("Play Animation");
-            System.Windows.Forms.TreeNode treeNode42 = new System.Windows.Forms.TreeNode("Play BGM");
-            System.Windows.Forms.TreeNode treeNode43 = new System.Windows.Forms.TreeNode("Fadeout BGM");
-            System.Windows.Forms.TreeNode treeNode44 = new System.Windows.Forms.TreeNode("Play Sound");
-            System.Windows.Forms.TreeNode treeNode45 = new System.Windows.Forms.TreeNode("Stop Sounds");
-            System.Windows.Forms.TreeNode treeNode46 = new System.Windows.Forms.TreeNode("Show Picture");
-            System.Windows.Forms.TreeNode treeNode47 = new System.Windows.Forms.TreeNode("Hide Picture");
-            System.Windows.Forms.TreeNode treeNode48 = new System.Windows.Forms.TreeNode("Special Effects", new System.Windows.Forms.TreeNode[] {
-            treeNode41,
+            treeNode39,
+            treeNode40});
+            System.Windows.Forms.TreeNode treeNode42 = new System.Windows.Forms.TreeNode("Play Animation");
+            System.Windows.Forms.TreeNode treeNode43 = new System.Windows.Forms.TreeNode("Play BGM");
+            System.Windows.Forms.TreeNode treeNode44 = new System.Windows.Forms.TreeNode("Fadeout BGM");
+            System.Windows.Forms.TreeNode treeNode45 = new System.Windows.Forms.TreeNode("Play Sound");
+            System.Windows.Forms.TreeNode treeNode46 = new System.Windows.Forms.TreeNode("Stop Sounds");
+            System.Windows.Forms.TreeNode treeNode47 = new System.Windows.Forms.TreeNode("Show Picture");
+            System.Windows.Forms.TreeNode treeNode48 = new System.Windows.Forms.TreeNode("Hide Picture");
+            System.Windows.Forms.TreeNode treeNode49 = new System.Windows.Forms.TreeNode("Special Effects", new System.Windows.Forms.TreeNode[] {
             treeNode42,
             treeNode43,
             treeNode44,
             treeNode45,
             treeNode46,
-            treeNode47});
-            System.Windows.Forms.TreeNode treeNode49 = new System.Windows.Forms.TreeNode("Start Quest");
-            System.Windows.Forms.TreeNode treeNode50 = new System.Windows.Forms.TreeNode("Complete Quest Task");
-            System.Windows.Forms.TreeNode treeNode51 = new System.Windows.Forms.TreeNode("End Quest");
-            System.Windows.Forms.TreeNode treeNode52 = new System.Windows.Forms.TreeNode("Quest Control", new System.Windows.Forms.TreeNode[] {
-            treeNode49,
+            treeNode47,
+            treeNode48});
+            System.Windows.Forms.TreeNode treeNode50 = new System.Windows.Forms.TreeNode("Start Quest");
+            System.Windows.Forms.TreeNode treeNode51 = new System.Windows.Forms.TreeNode("Complete Quest Task");
+            System.Windows.Forms.TreeNode treeNode52 = new System.Windows.Forms.TreeNode("End Quest");
+            System.Windows.Forms.TreeNode treeNode53 = new System.Windows.Forms.TreeNode("Quest Control", new System.Windows.Forms.TreeNode[] {
             treeNode50,
-            treeNode51});
-            System.Windows.Forms.TreeNode treeNode53 = new System.Windows.Forms.TreeNode("Wait...");
-            System.Windows.Forms.TreeNode treeNode54 = new System.Windows.Forms.TreeNode("Etc", new System.Windows.Forms.TreeNode[] {
-            treeNode53});
-            System.Windows.Forms.TreeNode treeNode55 = new System.Windows.Forms.TreeNode("Open Bank");
-            System.Windows.Forms.TreeNode treeNode56 = new System.Windows.Forms.TreeNode("Open Shop");
-            System.Windows.Forms.TreeNode treeNode57 = new System.Windows.Forms.TreeNode("Open Crafting Station");
-            System.Windows.Forms.TreeNode treeNode58 = new System.Windows.Forms.TreeNode("Shop and Bank", new System.Windows.Forms.TreeNode[] {
-            treeNode55,
+            treeNode51,
+            treeNode52});
+            System.Windows.Forms.TreeNode treeNode54 = new System.Windows.Forms.TreeNode("Wait...");
+            System.Windows.Forms.TreeNode treeNode55 = new System.Windows.Forms.TreeNode("Etc", new System.Windows.Forms.TreeNode[] {
+            treeNode54});
+            System.Windows.Forms.TreeNode treeNode56 = new System.Windows.Forms.TreeNode("Open Bank");
+            System.Windows.Forms.TreeNode treeNode57 = new System.Windows.Forms.TreeNode("Open Shop");
+            System.Windows.Forms.TreeNode treeNode58 = new System.Windows.Forms.TreeNode("Open Crafting Station");
+            System.Windows.Forms.TreeNode treeNode59 = new System.Windows.Forms.TreeNode("Shop and Bank", new System.Windows.Forms.TreeNode[] {
             treeNode56,
-            treeNode57});
+            treeNode57,
+            treeNode58});
             this.lblName = new System.Windows.Forms.Label();
             this.txtEventname = new DarkUI.Controls.DarkTextBox();
             this.grpEntityOptions = new DarkUI.Controls.DarkGroupBox();
@@ -879,102 +881,105 @@ private void InitializeComponent()
             treeNode27.Name = "hotbarspell";
             treeNode27.Tag = "51";
             treeNode27.Text = "Hotbar Spell";
-            treeNode28.Name = "changenamecolor";
-            treeNode28.Tag = "48";
-            treeNode28.Text = "Change Name Color";
-            treeNode29.Name = "changeplayerlabel";
-            treeNode29.Tag = "50";
-            treeNode29.Text = "Change Player Label";
-            treeNode30.Name = "playercontrol";
-            treeNode30.Text = "Player Control";
-            treeNode31.Name = "warpplayer";
-            treeNode31.Tag = "23";
-            treeNode31.Text = "Warp Player";
-            treeNode32.Name = "setmoveroute";
-            treeNode32.Tag = "24";
-            treeNode32.Text = "Set Move Route";
-            treeNode33.Name = "waitmoveroute";
-            treeNode33.Tag = "25";
-            treeNode33.Text = "Wait for Route Completion";
-            treeNode34.Name = "holdplayer";
-            treeNode34.Tag = "26";
-            treeNode34.Text = "Hold Player";
-            treeNode35.Name = "releaseplayer";
-            treeNode35.Tag = "27";
-            treeNode35.Text = "Release Player";
-            treeNode36.Name = "spawnnpc";
-            treeNode36.Tag = "28";
-            treeNode36.Text = "Spawn NPC";
-            treeNode37.Name = "despawnnpcs";
-            treeNode37.Tag = "39";
-            treeNode37.Text = "Despawn NPC";
-            treeNode38.Name = "hideplayer";
-            treeNode38.Tag = "45";
-            treeNode38.Text = "Hide Player";
-            treeNode39.Name = "showplayer";
-            treeNode39.Tag = "46";
-            treeNode39.Text = "Show Player";
-            treeNode40.Name = "movement";
-            treeNode40.Text = "Movement";
-            treeNode41.Name = "playanimation";
-            treeNode41.Tag = "29";
-            treeNode41.Text = "Play Animation";
-            treeNode42.Name = "playbgm";
-            treeNode42.Tag = "30";
-            treeNode42.Text = "Play BGM";
-            treeNode43.Name = "fadeoutbgm";
-            treeNode43.Tag = "31";
-            treeNode43.Text = "Fadeout BGM";
-            treeNode44.Name = "playsound";
-            treeNode44.Tag = "32";
-            treeNode44.Text = "Play Sound";
-            treeNode45.Name = "stopsounds";
-            treeNode45.Tag = "33";
-            treeNode45.Text = "Stop Sounds";
-            treeNode46.Name = "showpicture";
-            treeNode46.Tag = "43";
-            treeNode46.Text = "Show Picture";
-            treeNode47.Name = "hidepicture";
-            treeNode47.Tag = "44";
-            treeNode47.Text = "Hide Picture";
-            treeNode48.Name = "specialeffects";
-            treeNode48.Text = "Special Effects";
-            treeNode49.Name = "startquest";
-            treeNode49.Tag = "40";
-            treeNode49.Text = "Start Quest";
-            treeNode50.Name = "completequesttask";
-            treeNode50.Tag = "41";
-            treeNode50.Text = "Complete Quest Task";
-            treeNode51.Name = "endquest";
-            treeNode51.Tag = "42";
-            treeNode51.Text = "End Quest";
-            treeNode52.Name = "questcontrol";
-            treeNode52.Text = "Quest Control";
-            treeNode53.Name = "wait";
-            treeNode53.Tag = "34";
-            treeNode53.Text = "Wait...";
-            treeNode54.Name = "etc";
-            treeNode54.Text = "Etc";
-            treeNode55.Name = "openbank";
-            treeNode55.Tag = "35";
-            treeNode55.Text = "Open Bank";
-            treeNode56.Name = "openshop";
-            treeNode56.Tag = "36";
-            treeNode56.Text = "Open Shop";
-            treeNode57.Name = "opencraftingstation";
-            treeNode57.Tag = "37";
-            treeNode57.Text = "Open Crafting Station";
-            treeNode58.Name = "shopandbank";
-            treeNode58.Text = "Shop and Bank";
+            treeNode28.Name = "removehotbarspell";
+            treeNode28.Tag = "52";
+            treeNode28.Text = "Remove Hotbar Spell";
+            treeNode29.Name = "changenamecolor";
+            treeNode29.Tag = "48";
+            treeNode29.Text = "Change Name Color";
+            treeNode30.Name = "changeplayerlabel";
+            treeNode30.Tag = "50";
+            treeNode30.Text = "Change Player Label";
+            treeNode31.Name = "playercontrol";
+            treeNode31.Text = "Player Control";
+            treeNode32.Name = "warpplayer";
+            treeNode32.Tag = "23";
+            treeNode32.Text = "Warp Player";
+            treeNode33.Name = "setmoveroute";
+            treeNode33.Tag = "24";
+            treeNode33.Text = "Set Move Route";
+            treeNode34.Name = "waitmoveroute";
+            treeNode34.Tag = "25";
+            treeNode34.Text = "Wait for Route Completion";
+            treeNode35.Name = "holdplayer";
+            treeNode35.Tag = "26";
+            treeNode35.Text = "Hold Player";
+            treeNode36.Name = "releaseplayer";
+            treeNode36.Tag = "27";
+            treeNode36.Text = "Release Player";
+            treeNode37.Name = "spawnnpc";
+            treeNode37.Tag = "28";
+            treeNode37.Text = "Spawn NPC";
+            treeNode38.Name = "despawnnpcs";
+            treeNode38.Tag = "39";
+            treeNode38.Text = "Despawn NPC";
+            treeNode39.Name = "hideplayer";
+            treeNode39.Tag = "45";
+            treeNode39.Text = "Hide Player";
+            treeNode40.Name = "showplayer";
+            treeNode40.Tag = "46";
+            treeNode40.Text = "Show Player";
+            treeNode41.Name = "movement";
+            treeNode41.Text = "Movement";
+            treeNode42.Name = "playanimation";
+            treeNode42.Tag = "29";
+            treeNode42.Text = "Play Animation";
+            treeNode43.Name = "playbgm";
+            treeNode43.Tag = "30";
+            treeNode43.Text = "Play BGM";
+            treeNode44.Name = "fadeoutbgm";
+            treeNode44.Tag = "31";
+            treeNode44.Text = "Fadeout BGM";
+            treeNode45.Name = "playsound";
+            treeNode45.Tag = "32";
+            treeNode45.Text = "Play Sound";
+            treeNode46.Name = "stopsounds";
+            treeNode46.Tag = "33";
+            treeNode46.Text = "Stop Sounds";
+            treeNode47.Name = "showpicture";
+            treeNode47.Tag = "43";
+            treeNode47.Text = "Show Picture";
+            treeNode48.Name = "hidepicture";
+            treeNode48.Tag = "44";
+            treeNode48.Text = "Hide Picture";
+            treeNode49.Name = "specialeffects";
+            treeNode49.Text = "Special Effects";
+            treeNode50.Name = "startquest";
+            treeNode50.Tag = "40";
+            treeNode50.Text = "Start Quest";
+            treeNode51.Name = "completequesttask";
+            treeNode51.Tag = "41";
+            treeNode51.Text = "Complete Quest Task";
+            treeNode52.Name = "endquest";
+            treeNode52.Tag = "42";
+            treeNode52.Text = "End Quest";
+            treeNode53.Name = "questcontrol";
+            treeNode53.Text = "Quest Control";
+            treeNode54.Name = "wait";
+            treeNode54.Tag = "34";
+            treeNode54.Text = "Wait...";
+            treeNode55.Name = "etc";
+            treeNode55.Text = "Etc";
+            treeNode56.Name = "openbank";
+            treeNode56.Tag = "35";
+            treeNode56.Text = "Open Bank";
+            treeNode57.Name = "openshop";
+            treeNode57.Tag = "36";
+            treeNode57.Text = "Open Shop";
+            treeNode58.Name = "opencraftingstation";
+            treeNode58.Tag = "37";
+            treeNode58.Text = "Open Crafting Station";
+            treeNode59.Name = "shopandbank";
+            treeNode59.Text = "Shop and Bank";
             this.lstCommands.Nodes.AddRange(new System.Windows.Forms.TreeNode[] {
             treeNode5,
             treeNode13,
-            treeNode30,
-            treeNode40,
-            treeNode48,
-            treeNode52,
-            treeNode54,
-            treeNode58});
+            treeNode31,
+            treeNode41,
+            treeNode49,
+            treeNode53,
+            treeNode55,
+            treeNode59});
             this.lstCommands.Size = new System.Drawing.Size(445, 440);
             this.lstCommands.TabIndex = 2;
             this.lstCommands.AfterSelect += new System.Windows.Forms.TreeViewEventHandler(this.lstCommands_AfterSelect);
diff --git a/Intersect.Editor/Forms/Editors/Events/frmEvent.cs b/Intersect.Editor/Forms/Editors/Events/frmEvent.cs
index bea3fda4..b091e5cc 100644
--- a/Intersect.Editor/Forms/Editors/Events/frmEvent.cs
+++ b/Intersect.Editor/Forms/Editors/Events/frmEvent.cs
@@ -594,6 +594,10 @@ private void lstCommands_NodeMouseDoubleClick(object sender, TreeNodeMouseClickE
                 case EventCommandType.HotbarSpell:
                     tmpCommand = new CommandHotbarSpellCommand();
 
+                    break;
+                case EventCommandType.RemoveHotbarSpell:
+                    tmpCommand = new CommandRemoveHotbarSpellCommand();
+
                     break;
                 case EventCommandType.ChangeSprite:
                     tmpCommand = new ChangeSpriteCommand();
@@ -1174,6 +1178,10 @@ private void OpenEditCommand(EventCommand command)
                 case EventCommandType.HotbarSpell:
                     cmdWindow = new EventCommandHotbarSpell((CommandHotbarSpellCommand) command, this);
 
+                    break;
+                case EventCommandType.RemoveHotbarSpell:
+                    cmdWindow = new EventCommandRemoveHotbarSpell((CommandRemoveHotbarSpellCommand) command, this);
+
                     break;
                 case EventCommandType.ChangeSprite:
                     cmdWindow = new EventCommandChangeSprite((ChangeSpriteCommand) command, this);
diff --git a/Intersect.Editor/Intersect.Editor.csproj b/Intersect.Editor/Intersect.Editor.csproj
index 96287bf5..693e0e65 100644
--- a/Intersect.Editor/Intersect.Editor.csproj
+++ b/Intersect.Editor/Intersect.Editor.csproj
@@ -86,6 +86,12 @@
     <Compile Include="Core\Preferences.cs" />
     <Compile Include="Core\Program.cs" />
     <Compile Include="Entities\Animation.cs" />
+    <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_RemoveHotbarSpell.cs">
+      <SubType>UserControl</SubType>
+    </Compile>
+    <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_RemoveHotbarSpell.Designer.cs">
+      <DependentUpon>EventCommand_RemoveHotbarSpell.cs</DependentUpon>
+    </Compile>
     <Compile Include="Forms\Editors\Events\Event Commands\EventCommand_HotbarSpell.cs">
       <SubType>UserControl</SubType>
     </Compile>
@@ -669,6 +675,9 @@
     <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_ChangeNameColor.resx">
       <DependentUpon>EventCommand_ChangeNameColor.cs</DependentUpon>
     </EmbeddedResource>
+    <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_RemoveHotbarSpell.resx">
+      <DependentUpon>EventCommand_RemoveHotbarSpell.cs</DependentUpon>
+    </EmbeddedResource>
     <EmbeddedResource Include="Forms\Editors\Events\Event Commands\EventCommand_HotbarSpell.resx">
       <DependentUpon>EventCommand_HotbarSpell.cs</DependentUpon>
     </EmbeddedResource>
diff --git a/Intersect.Editor/Localization/Strings.cs b/Intersect.Editor/Localization/Strings.cs
index 1472707d..af59e22a 100644
--- a/Intersect.Editor/Localization/Strings.cs
+++ b/Intersect.Editor/Localization/Strings.cs
@@ -1273,6 +1273,19 @@ public struct EventHotbarSpell
 
         }
 
+        public struct EventRemoveHotbarSpell
+        {
+
+            public static LocalizedString cancel = @"Cancel";
+
+            public static LocalizedString item = @"Spell:";
+
+            public static LocalizedString okay = @"Ok";
+
+            public static LocalizedString title = @"Remove Equipped Hotbar Spell";
+
+        }
+
         public struct EventChangeVital
         {
 
@@ -1430,6 +1443,8 @@ public struct EventCommandList
 
             public static LocalizedString hotbarspell = @"Place spell in hotbar: [{00}]";
 
+            public static LocalizedString removehotbarspell = @"Remove spell from hotbar: [{00}]";
+
             public static LocalizedString changespells = @"Change Player Spells [{00}]";
 
             public static LocalizedString chatboxtext = @"Show Chatbox Text [Channel: {00}, Color: {01}] - {02}";
@@ -1741,6 +1756,7 @@ public struct EventCommands
                 {"showplayer", @"Show Player"},
                 {"equipitem", @"Equip Item"},
                 {"hotbarspell", @"Hotbar Spell"},
+                {"removehotbarspell", @"Remove Hotbar Spell"},
                 {"changenamecolor", @"Change Name Color"},
                 {"inputvariable", @"Input Variable"},
                 {"changeplayerlabel", @"Change Player Label"},
diff --git a/Intersect.Server/Entities/Events/CommandProcessing.cs b/Intersect.Server/Entities/Events/CommandProcessing.cs
index af24644b..c711196a 100644
--- a/Intersect.Server/Entities/Events/CommandProcessing.cs
+++ b/Intersect.Server/Entities/Events/CommandProcessing.cs
@@ -486,6 +486,25 @@ Stack<CommandInstance> callStack
             PacketSender.SendHotBarSpell(player, command.SpellId);
         }
 
+        //Remove Hotbar Spell Command
+        private static void ProcessCommand(
+            CommandRemoveHotbarSpellCommand command,
+            Player player,
+            Event instance,
+            CommandInstance stackInfo,
+            Stack<CommandInstance> callStack
+        )
+        {
+            var itm = SpellBase.Get(command.SpellId);
+
+            if (itm == null)
+            {
+                return;
+            }
+
+            PacketSender.SendRemoveHotBarSpell(player, command.SpellId);
+        }
+
         //Change Sprite Command
         private static void ProcessCommand(
             ChangeSpriteCommand command,
diff --git a/Intersect.Server/Networking/PacketSender.cs b/Intersect.Server/Networking/PacketSender.cs
index 829afcae..8dcbbae7 100644
--- a/Intersect.Server/Networking/PacketSender.cs
+++ b/Intersect.Server/Networking/PacketSender.cs
@@ -1808,6 +1808,12 @@ public static void SendHotBarSpell(Player player, Guid spelltohotbar)
             player.SendPacket(new HotbarSpellPacket(spelltohotbar));
         }
 
+        //RemoveHotbarSpellPacket
+        public static void SendRemoveHotBarSpell(Player player, Guid spelltohotbar)
+        {
+            player.SendPacket(new RemoveHotbarSpellPacket(spelltohotbar));
+        }
+
         //PasswordResetResultPacket
         public static void SendPasswordResetResult(Client client, bool result)
         {
-- 
2.26.2.windows.1

